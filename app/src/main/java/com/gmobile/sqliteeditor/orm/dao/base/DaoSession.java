package com.gmobile.sqliteeditor.orm.dao.base;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.gmobile.sqliteeditor.orm.dao.model.AppData;
import com.gmobile.sqliteeditor.orm.dao.model.HistoryData;
import com.gmobile.sqliteeditor.orm.dao.model.MineData;

import com.gmobile.sqliteeditor.orm.dao.base.AppDataDao;
import com.gmobile.sqliteeditor.orm.dao.base.HistoryDataDao;
import com.gmobile.sqliteeditor.orm.dao.base.MineDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig appDataDaoConfig;
    private final DaoConfig historyDataDaoConfig;
    private final DaoConfig mineDataDaoConfig;

    private final AppDataDao appDataDao;
    private final HistoryDataDao historyDataDao;
    private final MineDataDao mineDataDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        appDataDaoConfig = daoConfigMap.get(AppDataDao.class).clone();
        appDataDaoConfig.initIdentityScope(type);

        historyDataDaoConfig = daoConfigMap.get(HistoryDataDao.class).clone();
        historyDataDaoConfig.initIdentityScope(type);

        mineDataDaoConfig = daoConfigMap.get(MineDataDao.class).clone();
        mineDataDaoConfig.initIdentityScope(type);

        appDataDao = new AppDataDao(appDataDaoConfig, this);
        historyDataDao = new HistoryDataDao(historyDataDaoConfig, this);
        mineDataDao = new MineDataDao(mineDataDaoConfig, this);

        registerDao(AppData.class, appDataDao);
        registerDao(HistoryData.class, historyDataDao);
        registerDao(MineData.class, mineDataDao);
    }
    
    public void clear() {
        appDataDaoConfig.getIdentityScope().clear();
        historyDataDaoConfig.getIdentityScope().clear();
        mineDataDaoConfig.getIdentityScope().clear();
    }

    public AppDataDao getAppDataDao() {
        return appDataDao;
    }

    public HistoryDataDao getHistoryDataDao() {
        return historyDataDao;
    }

    public MineDataDao getMineDataDao() {
        return mineDataDao;
    }

}
